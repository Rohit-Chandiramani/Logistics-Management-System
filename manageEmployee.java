/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trialapp;

import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author ROHIT
 */
public class manageEmployee extends javax.swing.JFrame {

    /**
     * Creates new form manageEmployee
     */
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   static final String DB_URL = "jdbc:mysql://localhost:3306/logistics";
   String selUsername=null;
    //String name,number,username,type = null;
    public manageEmployee() {
        initComponents();
        Font f = new Font("Tamoha", Font.BOLD, 18);
      JTableHeader header =tableEmployee.getTableHeader();
      header.setFont(f);
      
      viewTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("logistics?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        hrQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT h FROM Hr h");
        hrList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : hrQuery.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmployee = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        nameText = new javax.swing.JTextField();
        numberText = new javax.swing.JTextField();
        usernameText = new javax.swing.JTextField();
        typeText = new javax.swing.JTextField();
        passwordText = new javax.swing.JPasswordField();
        searchText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cityText = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(null);

        tableEmployee.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "NUMBER", "USERNAME", "TYPE", "CITY", "E-MAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEmployee.setFocusable(false);
        tableEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEmployee);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(540, 120, 790, 310);
        getContentPane().add(jPanel2);
        jPanel2.setBounds(200, 120, 10, 10);

        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });
        nameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameTextKeyTyped(evt);
            }
        });
        getContentPane().add(nameText);
        nameText.setBounds(220, 90, 240, 40);

        numberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberTextActionPerformed(evt);
            }
        });
        numberText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numberTextKeyTyped(evt);
            }
        });
        getContentPane().add(numberText);
        numberText.setBounds(220, 160, 240, 40);

        usernameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextActionPerformed(evt);
            }
        });
        getContentPane().add(usernameText);
        usernameText.setBounds(220, 230, 240, 40);

        typeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeTextActionPerformed(evt);
            }
        });
        typeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                typeTextKeyTyped(evt);
            }
        });
        getContentPane().add(typeText);
        typeText.setBounds(220, 370, 240, 40);

        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });
        getContentPane().add(passwordText);
        passwordText.setBounds(220, 300, 240, 40);

        searchText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchText.setText("Type Keyword to Search");
        searchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFocusLost(evt);
            }
        });
        getContentPane().add(searchText);
        searchText.setBounds(810, 570, 250, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("NAME:-");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(100, 90, 90, 50);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("NUMBER:-");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(100, 150, 100, 50);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("USERNAME:-");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(100, 220, 100, 50);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("PASSWORD:-");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(100, 300, 110, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("TYPE:-");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(100, 370, 60, 40);

        errorLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(errorLabel);
        errorLabel.setBounds(310, 630, 380, 40);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trialapp/blue-refresh-button-icon-65919_40x40.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(1070, 570, 40, 40);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trialapp/678092-sign-add-128_1_30x30.png"))); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(330, 570, 30, 40);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trialapp/search-12-xxl_1_25x25.png"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(760, 570, 25, 40);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trialapp/downloading_updates_filled1600_25x30.png"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(480, 570, 30, 40);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trialapp/remove-icon-png-26_25x30.png"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(620, 570, 30, 40);

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB", 0, 48)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("EMPLOYEE MANAGEMENT");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(380, 0, 620, 110);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("CITY:-");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(100, 430, 50, 50);

        cityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextActionPerformed(evt);
            }
        });
        cityText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cityTextKeyTyped(evt);
            }
        });
        getContentPane().add(cityText);
        cityText.setBounds(220, 430, 240, 40);

        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("BACK TO MANAGEMENT PORTAL");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton);
        backButton.setBounds(780, 630, 280, 50);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(250, 570, 120, 40);

        updateButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton);
        updateButton.setBounds(380, 570, 130, 40);

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton);
        deleteButton.setBounds(520, 570, 130, 40);

        searchButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton);
        searchButton.setBounds(660, 570, 130, 40);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("E-MAIL:-");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(100, 490, 70, 40);

        emailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextActionPerformed(evt);
            }
        });
        getContentPane().add(emailText);
        emailText.setBounds(220, 490, 240, 40);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trialapp/Leadership-picture1-760x570_1366x768.jpg"))); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(0, 0, 1370, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void viewTable()
    {Connection conn = null;
         Statement stmt = null;
         ResultSet rs=null;
         //DefaultTableModel model =(DefaultTableModel) tableEmployee.getModel();
         //ArrayList<rowEntity> list=new ArrayList<>();
         
         
         try{
         Class.forName("com.mysql.jdbc.Driver");
         conn = DriverManager.getConnection(DB_URL,"root","R30101997c");
         stmt=conn.createStatement();
         String query="SELECT name,number,username,type,city,email FROM hr";
          rs=stmt.executeQuery(query);
          tableEmployee.setModel(DbUtils.resultSetToTableModel(rs));
         
         } catch (SQLException ex) {
             Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    
    private void numberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberTextActionPerformed

    private void typeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeTextActionPerformed

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextActionPerformed

    private void tableEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEmployeeMouseClicked

        TableModel tableModel = (DefaultTableModel)tableEmployee.getModel();
        //Object o;
        int indexrow=tableEmployee.getSelectedRow();
        String name=(String) tableModel.getValueAt(indexrow, 0);
        String number=(String) tableModel.getValueAt(indexrow, 1);
        String username=(String) tableModel.getValueAt(indexrow, 2);
        String type=(String) tableModel.getValueAt(indexrow, 3);
        String city=(String) tableModel.getValueAt(indexrow, 4);
        String email=(String)tableModel.getValueAt(indexrow, 5);
        selUsername=username;
        

         
         nameText.setText(name);
         numberText.setText(number);
         usernameText.setText(username);
         typeText.setText(type);
         cityText.setText(city);
         emailText.setText(email);
        
        
    }//GEN-LAST:event_tableEmployeeMouseClicked

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void usernameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextActionPerformed

    private void searchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusLost

        if(!(searchText.getText().equals("")&&searchText.getText().equals("Type Keyword to Search")));
            errorLabel.setText("");
    }//GEN-LAST:event_searchTextFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

            viewTable(); 
            errorLabel.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusGained
        // TODO add your handling code here:
        if(searchText.getText().equals("Type Keyword to Search"));
            searchText.setText("");
    }//GEN-LAST:event_searchTextFocusGained

    private void cityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        managementFront obj=new managementFront();
        this.dispose();
        obj.setVisible(true);
        obj.setTitle("MANAGEMENT PORTAL");
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String name=nameText.getText();
        String number=numberText.getText();
        String username=usernameText.getText();
        char type = 0;
        String city=cityText.getText();
        String email=emailText.getText();
        String password=String.valueOf(passwordText.getPassword());
        Connection conn = null;
         Statement stmt = null;
         ResultSet rs=null;
         int flag=0;
         
         if(nameText.getText().equals(""))
         {
             JOptionPane.showMessageDialog(null,"Enter NAME");
            flag=1;
             
         }
         if(numberText.getText().equals(""))
         {
             JOptionPane.showMessageDialog(null,"Enter NUMBER");
            flag=1;
             
         }
         
         if(usernameText.getText().equals(""))
         {
             JOptionPane.showMessageDialog(null,"Enter USERNAME");
            flag=1;
             
         }
         
         if(typeText.getText().equals(""))
         {
             JOptionPane.showMessageDialog(null,"Enter TYPE");
            flag=1;
             
         }
         if(cityText.getText().equals(""))
         {
             JOptionPane.showMessageDialog(null,"Enter CITY");
            flag=1;
             
         }
         
         if(emailText.getText().equals(""))
         {
             JOptionPane.showMessageDialog(null,"Enter E-MAIL");
            flag=1;
             
         }
         if(String.valueOf(passwordText.getPassword()).equals(""))
        {
            JOptionPane.showMessageDialog(null,"Enter PASSWORD");
            flag=1;
        }
         
         if(flag==0)
         {
         try{
         Class.forName("com.mysql.jdbc.Driver");
         conn = DriverManager.getConnection(DB_URL,"root","R30101997c");
         stmt=conn.createStatement();
         String query="select number,username from hr";
         rs=stmt.executeQuery(query);
         while(rs.next())
         {
             if(number.equals(rs.getString("number")))
                 flag=1;
             if(username.equals(rs.getString("username")))
                 flag=1;
         }
         
         
       
         if(flag==0)
         {
             type=typeText.getText().charAt(0);
         
         query="INSERT INTO hr "+ "VALUES"+"("+"'"+name+"'"+","+"'"+number+"'"+","+"'"+username+"'"+","+"'"+password+"'"+","+"'"+type+"'"+","+"'"+city+"'"+","+"'"+email+"'"+")";
         //System.out.println(query);
         stmt.executeUpdate(query);
         viewTable();
         }
         
         
         else
         {
             JOptionPane.showMessageDialog(null, "Employee with similar username/number already exists!");
         }
         
         } catch (ClassNotFoundException ex) {
            Logger.getLogger(productFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(productFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         finally{
      //finally block used to close resources
      try{
         if(stmt!=null)
            conn.close();
      }catch(SQLException se){
      }// do nothing
      try{
         if(conn!=null)
            conn.close();
      }catch(SQLException se){
         se.printStackTrace();
      }
         }
         
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if(String.valueOf(passwordText.getPassword()).equals(""))
        {
            JOptionPane.showMessageDialog(null,"Enter PASSWORD");
        }
        else
        {
        String name=nameText.getText();
        String number=numberText.getText();
        String username=usernameText.getText();
        String email=emailText.getText();
        char type=typeText.getText().charAt(0);
        String city=cityText.getText();
        String password=String.valueOf(passwordText.getPassword());
        Connection conn = null;
         Statement stmt = null;
         ResultSet rs=null;
         try{
         Class.forName("com.mysql.jdbc.Driver");
         conn = DriverManager.getConnection(DB_URL,"root","R30101997c");
         stmt=conn.createStatement();
         
         String query="DELETE FROM hr WHERE username="+"'"+selUsername+"'";
         //System.out.println(query);
         stmt.executeUpdate(query);
         
         String query2="INSERT INTO hr "+ "VALUES"+"("+"'"+name+"'"+","+"'"+number+"'"+","+"'"+username+"'"+","+"'"+password+"'"+","+"'"+type+"'"+","+"'"+city+"'"+","+"'"+email+"'"+")";
         stmt.executeUpdate(query2);
         
         
         viewTable();
         
         } catch (ClassNotFoundException ex) {
            Logger.getLogger(productFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(productFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         finally{
      //finally block used to close resources
      try{
         if(stmt!=null)
            conn.close();
      }catch(SQLException se){
      }// do nothing
      try{
         if(conn!=null)
            conn.close();
      }catch(SQLException se){
         se.printStackTrace();
      }
         }
        }
    
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String name=nameText.getText();
        String number=numberText.getText();
        String username=usernameText.getText();
        String type=typeText.getText();
        char c=type.charAt(0);
            Connection conn = null;
         Statement stmt = null;
         ResultSet rs=null;
         try{
         Class.forName("com.mysql.jdbc.Driver");
         conn = DriverManager.getConnection(DB_URL,"root","R30101997c");
         stmt=conn.createStatement();
         
        String query="DELETE FROM hr where number="+"'"+number+"'"; 
         //System.out.println(query);
         stmt.executeUpdate(query);
         } catch (ClassNotFoundException ex) {
            Logger.getLogger(productFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(productFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         finally{
      //finally block used to close resources
      try{
         if(stmt!=null)
            conn.close();
      }catch(SQLException se){
      }// do nothing
      try{
         if(conn!=null)
            conn.close();
      }catch(SQLException se){
         se.printStackTrace();
      }
         }
         
         viewTable();
    
        
    
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        if(searchText.getText().equals("Type Keyword to Search")||searchText.getText().equals(""))
        {
            errorLabel.setText("*Enter the Keyword to Search");
        }
        else
        {
            Connection conn = null;
            Statement stmt = null;
            ResultSet rs=null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                conn = DriverManager.getConnection(DB_URL,"root","R30101997c");
                stmt=conn.createStatement();

                String query="SELECT name,number,username,type,city,email FROM hr WHERE CONCAT(`name`, `number`, `username`, `type`,`city`,`email`) LIKE '%"+searchText.getText()+"%'";
                //System.out.println(query);
                rs=stmt.executeQuery(query);
                tableEmployee.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(productFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(productFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            finally{
                //finally block used to close resources
                try{
                    if(stmt!=null)
                    conn.close();
                }catch(SQLException se){
                }// do nothing
                try{
                    if(conn!=null)
                    conn.close();
                }catch(SQLException se){
                    se.printStackTrace();
                }
            }
        }
    
    }//GEN-LAST:event_searchButtonActionPerformed

    private void emailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextActionPerformed

    private void nameTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyTyped
        char ch=evt.getKeyChar();
        if(!Character.isLetter(ch))
            evt.consume();
    }//GEN-LAST:event_nameTextKeyTyped

    private void typeTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typeTextKeyTyped
        // TODO add your handling code here:
        char ch=evt.getKeyChar();
        if(!Character.isLetter(ch))
            evt.consume();
    }//GEN-LAST:event_typeTextKeyTyped

    private void cityTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cityTextKeyTyped
        // TODO add your handling code here:
        char ch=evt.getKeyChar();
        if(!Character.isLetter(ch))
            evt.consume();
    }//GEN-LAST:event_cityTextKeyTyped

    private void numberTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberTextKeyTyped
        // TODO add your handling code here:
        char ch=evt.getKeyChar();
        if(!Character.isDigit(ch))
            evt.consume();
    }//GEN-LAST:event_numberTextKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                manageEmployee obj=new manageEmployee();
                obj.setVisible(true);
                obj.setTitle("EMPLOYEE MANAGEMENT");
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField cityText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField emailText;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel errorLabel;
    private java.util.List<trialapp.Hr> hrList;
    private javax.persistence.Query hrQuery;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField numberText;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JTable tableEmployee;
    private javax.swing.JTextField typeText;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField usernameText;
    // End of variables declaration//GEN-END:variables
}
